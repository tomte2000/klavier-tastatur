$red:rgba(255,0,0,1);

*{box-sizing:border-box ;}



body {
    margin: 0;
    overflow: hidden;
  }

  .grid {
    display: grid;
    grid-template-columns: 1fr 1fr 1fr;
    grid-gap: 15px;
    width: 80vw;
    margin: 0 auto;
    padding: 15px;
    background: rgba(163, 163, 163,.5);
    div {
      border: 1px solid $red;
      margin: 15px 0;
    }
  }
  
  .background {
    position: fixed;
    z-index: -1;
    width: 100vw;
    height: 100vh;
    background:rgba(51, 51, 51,1);
    $particleSize:20vmin;
    $animationDuration: 6s;
    $amount: 20;
    span {
      width: $particleSize;
      height: $particleSize;
      border-radius: $particleSize;
      backface-visibility: hidden;
      position: absolute;
      animation-name: move;
      animation-duration: $animationDuration;
      animation-timing-function: linear;
      animation-iteration-count: infinite;
      $colors: (rgba(163, 163, 163,.5));
      @for $i from 1 through $amount {
        &:nth-child(#{$i}) {
          color: nth($colors, random(length($colors)));
          top: random(100) * 1%;
          left: random(100) * 1%;
          animation-duration: (random($animationDuration * 10) / 10) * 1s + 10s;
          animation-delay: random(($animationDuration + 10s) * 10) / 10 * -1s;
          transform-origin: (random(50) - 25) * 1vw (random(50) - 25) * 1vh;
          $blurRadius: (random() + 0.5) * $particleSize * 0.09;
          $x: if(random() > 0.5, -1, 1);
          box-shadow: ($particleSize * 2 * $x) 0 $blurRadius currentColor;
          //box-shadow: ($particleSize * 2 * $x) 0 0 currentColor;
        }
      }
    }
  }
  
  @keyframes move {
    100% {
      transform: translate3d(0, 0, 1px) rotate(360deg);
    }
  }